Link:https://leetcode.com/problems/binary-tree-inorder-traversal/

思路：
Preorder: root, left, right
1,null,2,3>>>1,2,3

Method One: DFS


Recursive method with LIST as returning value
class Solution {
    public List<Integer> preorderTraversal(TreeNode root) {
        List<Integer> pre=new LinkedList<Integer>(); // turn the List into LinkedList
       if(root==null) return pre; //Checking and return
        pre.add(root.val);		//visit root
        pre.addAll (preorderTraversal(root.left));	//visit pre
        pre.addAll (preorderTraversal(root.right));
        return pre;
    }
}

Recursive method with Helper method to have a List as parameter, so we can modify the parameter and don't have to instantiate a new List at each recursive call:
